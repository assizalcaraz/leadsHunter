services:
  web:
    build:
      context: .
    command: gunicorn leadsHunter.wsgi:application --bind 0.0.0.0:8001
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db
      - rabbitmq
    environment:
      - DEBUG=True
    env_file:
      - .env
    networks:
      - app_network

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # Puerto AMQP para Celery
      - "15672:15672"  # Consola de administraci√≥n
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - app_network

  celery:
    build:
      context: .
    command: celery -A leadsHunter worker --loglevel=info
    depends_on:
      - rabbitmq
      - db
    volumes:
      - .:/app
    env_file:
      - .env
    networks:
      - app_network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8080:80"
    depends_on:
      - web
    env_file:
      - .env
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data:
  static_volume:
  media_volume:
